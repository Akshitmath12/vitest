// Test generated by RoostGPT for test ReactStoryBook using AI Type Open AI and AI Model gpt-4

const { resolveMainClient } = require('./mockServiceWorker');
const { JSDOM } = require('jsdom');
const { window } = new JSDOM();

global.self = window;

describe('resolveMainClient', () => {
  let event;
  let client;
  let allClients;
  let activeClientIds;

  beforeEach(() => {
    event = { clientId: '123' };
    client = { frameType: 'top-level' };
    allClients = [
      { id: '123', visibilityState: 'visible' },
      { id: '456', visibilityState: 'hidden' },
      { id: '789', visibilityState: 'visible' },
    ];
    activeClientIds = new Set(['123', '789']);

    self.clients = {
      get: jest.fn().mockResolvedValue(client),
      matchAll: jest.fn().mockResolvedValue(allClients),
    };
  });

  test('returns the client if its frameType is top-level', async () => {
    const result = await resolveMainClient(event);
    expect(result).toBe(client);
  });

  test('returns the visible and active client if the client frameType is not top-level', async () => {
    client.frameType = 'not-top-level';
    const result = await resolveMainClient(event);
    expect(result).toEqual(allClients[0]);
  });

  test('returns undefined if no client matches the criteria', async () => {
    client.frameType = 'not-top-level';
    activeClientIds.delete('123');
    const result = await resolveMainClient(event);
    expect(result).toBeUndefined();
  });
});
